function KeneticFitting
format long
clear all
clc
yexp = [0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.1919 0.1728 0.1533 0.1379];%experiment data
tspan_s = [1.53333 33.56667 65.53333 95.53333 133.56667 171.56667 199.56667 229.56667 255.53333 275.56667 297.56667 317.56667];
% yexp = [0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.209199637 0.1919 0.1728 0.1533 0.1379 0.1379 0.1379 0.1379 0.1379 0.1379 0.1379];%experiment data
% tspan_s = [1.53333 33.56667 65.53333 95.53333 133.56667 171.56667 199.56667 229.56667 255.53333 275.56667 297.56667 317.56667 339.56667 365.56667 397.56667 431.53333 493.56667 553.56667];
% yexp = [0.209199636800000000 0.191877467200000000 0.172845246400000000 0.153284673600000000 0.137699617600000000];
% tspan_s = [229.56667 255.53333 275.56667 297.56667 317.56667];
tspan = tspan_s/60; 
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
x0=[0.209199637 0 0 0 0 0 0 0 0];
k0 = [1 1 1 1 1 1 1 1 1 1]*1e-1;
lb = [0 0 0 0 0 0 0 0 0 0];
ub = [1 1 1 1 1 1 1 1 1 1]*1e5;
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[k,resnorm,residual,exitflag,output,lambda,jacobian] =lsqnonlin(@ObjFunc1,k0,lb,ub,[],tspan,x0,yexp);       
% fprintf('\n\n使用函数lsqnonlin()估计得到的参数值为:\n')
% fprintf('\tk_b1 = %.16f \n',k(1))
% fprintf('\tk_b2 = %.16f \n',k(2))
% fprintf('\tb1 = %.16f \n',k(3))
% fprintf('\tb2 = %.16f \n',k(4))
% fprintf('\tk_g = %.16f \n',k(5))
% fprintf('\tk_d = %16f \n',k(6))
% fprintf('\tg = %.16f \n',k(7))
% fprintf('\td = %.16f \n',k(8))
% fprintf('\tp = %.16f \n',k(9))
% fprintf('\tL0 = %.16f \n',k(10))
ts=0:max(tspan);
% [ts ys]=ode45(@KineticsEqs,ts,x0,[],k);
[tsim ysim] = ode45(@KineticsEqs1,tspan,x0,[],k);
figure(1),plot(tsim,ysim(:,1),'b',tspan(1:end),yexp,'or'),legend('计算值','实验值','Location','best');
% size(ts);
% size(ys(:,1));
% size(tspan(1:end));
% size(ysim(:,1));
% size(yexp);
Compare=[ysim(:,1) yexp' (ysim(:,1)-yexp')./yexp'*100];
colnames = {'计算值', '实验值', '误差百分比%'};
table=uitable(figure(2),'Data',Compare,'ColumnName', colnames);


kk1={'k_b' 'k_b2' 'b1' 'b2' 'k_g' 'k_d' 'g' 'd' 'p' 'L0'}';
for i=1:length(k)
kk2{i}=k(i);
end
kk2=kk2';
kk3=cat(2,kk1,kk2);
colnames = {'参数','参数值'};
table=uitable(figure(3),'Data',kk3,'ColumnName', colnames);



function f = ObjFunc1(k,tspan,x0,yexp)           
[t Ysim] = ode45(@KineticsEqs1,tspan,x0,[],k);
mu_alph_140 = spline(t,Ysim(:,5),2);
mu_beta_140 = spline(t,Ysim(:,9),2);
[tt YYsim] = ode45(@KineticsEqs2,tspan,x0,[],k,mu_alph_140,mu_beta_140);
Ysim1=Ysim(:,1);
ysim(:,1) = Ysim1(1:end);
size(ysim(:,1));
size(yexp');
% f=1-(ysim(:,1)-yexp').^2./((mean(ysim(:,1))-yexp).^2)';
f=(ysim(:,1)-yexp').^2;

function dCdt = KineticsEqs1(t,C,k)    
CA=C(1);
mu_alpha(1)=C(2);mu_alpha(2) = C(3);mu_alpha(3) = C(4);mu_alpha(4) = C(5); 
mu_beta(1)=C(6);mu_beta(2)=C(7);mu_beta(3)=C(8);mu_beta(4)=C(9);
k_b1 = k(1);
k_b2 = k(2);
b1 = k(3) ;
b2 = k(4) ;
k_g = k(5) ;
k_d = k(6) ;
g = k(7) ;
d = k(8) ;
p = k(9) ;
L0 = k(10) ;
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
%  delta T
T = 25;
T_sat_alpha = -10.091+(-1762.6+14314*CA).^0.5;
T_sat_beta  = -5.1366+(-1039.6+14140*CA).^0.5;
delta_T_alpha = T_sat_alpha - T;
delta_T_beta  = T_sat_beta - T;
%B G alfa
if delta_T_alpha >= 0
   B1_alpha = k_b1.*delta_T_alpha.^b1;
   B2_alpha = k_b2.*delta_T_alpha.^b2.*mu_alpha(4);
   G_alpha = k_g.*delta_T_alpha.^g;
   f_alpha = 1;
else
   B1_alpha = 0;
   B2_alpha = 0;
   G_alpha = -k_d.*(-delta_T_alpha).^d;
   f_alpha = mu_alpha(4)./mu_alpha(4); 
end
%B G beta
if delta_T_beta >= 0
   B1_beta = k_b1.*delta_T_beta.^b1;
   B2_beta = k_b2.*delta_T_beta.^b2*mu_beta(4);
   G_beta = k_g.*delta_T_beta.^g;
   f_beta = 1;
else
   B1_beta = 0;
   B2_beta = 0;
   G_beta = - k_d.*(-delta_T_beta).^d;
   f_beta = mu_beta(4)./mu_beta(4);
end
dCAdt =-p*(3*f_alpha*G_alpha*mu_alpha(2)+(B1_alpha+B2_alpha)*L0^3+3*f_beta*G_beta*mu_beta(2)+(B1_beta+B2_beta)*L0^3);
dmu_alphadt(1)=B1_alpha+B2_alpha;
dmu_betadt(1) =B1_beta+B2_beta;
for i=2:4
    dmu_alphadt(i) = (i-1)*f_alpha*G_alpha*mu_alpha(i-1)+(B1_alpha+B2_alpha)*L0^(i-1);
    dmu_betadt(i)  = (i-1)*f_beta*G_beta*mu_beta(i-1)+(B1_beta+B2_beta)*L0^(i-1);
end
dCdt=[dCAdt;dmu_alphadt(1);dmu_alphadt(2);dmu_alphadt(3);dmu_alphadt(4);dmu_betadt(1);dmu_betadt(2);dmu_betadt(3);dmu_betadt(4)];
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function dCdt = KineticsEqs2(t,C,k,mu_alph_140,mu_beta_140)    
CA=C(1);
mu_alpha(1)=C(2);mu_alpha(2) = C(3);mu_alpha(3) = C(4);mu_alpha(4) = C(5); 
mu_beta(1)=C(6);mu_beta(2)=C(7);mu_beta(3)=C(8);mu_beta(4)=C(9);
k_b1 = k(1);
k_b2 = k(2);
b1 = k(3) ;
b2 = k(4) ;
k_g = k(5) ;
k_d = k(6) ;
g = k(7) ;
d = k(8) ;
p = k(9) ;
L0 = k(10) ;
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
%  delta T
T = 25;
T_sat_alpha = -10.091+(-1762.6+14314*CA).^0.5;
T_sat_beta  = -5.1366+(-1039.6+14140*CA).^0.5;
delta_T_alpha = T_sat_alpha - T;
delta_T_beta  = T_sat_beta - T;
%B G alfa
if delta_T_alpha >= 0
   B1_alpha = k_b1.*delta_T_alpha.^b1;
   B2_alpha = k_b2.*delta_T_alpha.^b2.*mu_alpha(4);
   G_alpha = k_g.*delta_T_alpha.^g;
   f_alpha = 1;
else
   B1_alpha = 0;
   B2_alpha = 0;
   G_alpha = -k_d.*(-delta_T_alpha).^d;
   f_alpha = mu_alpha(4)./mu_alph_140;
end
%B G beta
if delta_T_beta >= 0
   B1_beta = k_b1.*delta_T_beta.^b1;
   B2_beta = k_b2.*delta_T_beta.^b2*mu_beta(4);
   G_beta = k_g.*delta_T_beta.^g;
   f_beta = 1;
else
   B1_beta = 0;
   B2_beta = 0;
   G_beta = - k_d.*(-delta_T_beta).^d;
   f_beta = mu_beta(4)./mu_beta_140;
end
dCAdt =-p*(3*f_alpha*G_alpha*mu_alpha(2)+(B1_alpha+B2_alpha)*L0^3+3*f_beta*G_beta*mu_beta(2)+(B1_beta+B2_beta)*L0^3);
dmu_alphadt(1)=B1_alpha+B2_alpha;
dmu_betadt(1) =B1_beta+B2_beta;
for i=2:4
    dmu_alphadt(i) = (i-1)*f_alpha*G_alpha*mu_alpha(i-1)+(B1_alpha+B2_alpha)*L0^(i-1);
    dmu_betadt(i)  = (i-1)*f_beta*G_beta*mu_beta(i-1)+(B1_beta+B2_beta)*L0^(i-1);
end
dCdt=[dCAdt;dmu_alphadt(1);dmu_alphadt(2);dmu_alphadt(3);dmu_alphadt(4);dmu_betadt(1);dmu_betadt(2);dmu_betadt(3);dmu_betadt(4)];
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------




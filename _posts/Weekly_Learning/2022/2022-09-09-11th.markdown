---
layout:     post
title:      "2022-每周补脑11th"
subtitle:   ""
date:       2022-09-09 14:00:00
author:     "XiLock"
header-img: "img/in-post/2018/wl-bg.jpg"
header-mask: 0.3
catalog:    true
tags:
    - 每周补脑
    - 2022


---

### 科研

### 言论
1. 一位护士问临终的病人，他们有什么遗憾。她后来总结出了5个最常见的回答。 不要忽视梦想。不要工作过久。说出想法。交朋友。要开心。 -- [Paul Graham](http://www.paulgraham.com/todo.html) 
1. 一位医生曾经告诉我，医学院没教的一件事情是，医学和当医生是有区别的。医学是一门生物科学，而当医生是一种社会技能，涉及到管理期望、了解医保制度、人际关系、有效沟通等。 -- [THE DIFFERENCE BETWEEN MEDICINE AND BEING A DOCTOR IS LIKE ...](http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2022-07.html#e2022-07-03T09_00_55.htm)
1. 经验就是每个人为自己犯的错误起的名字。（Experience is the name everyone gives to their mistakes.） -- 奥斯卡·王尔德
1. 有一个编程原则叫做 DRY（Don't repeat yourself，不要重复自己），指的是尽量不要有重复的代码。 更好的名字应该是 SPOT（Single Point Of Truth，单点事实）。代码需要修改时，你只需要在一个地方修改，而不必改动多个地方。 -- [Hacker News](https://news.ycombinator.com/item?id=32012566)
1. 就算公司真的解雇你，你属于有多年项目经验的程序员，这种人在市场上是抢手的，不难找到下一份工作，而且工资很可能会增加。很多公司不是真的要裁员，而是在调整雇员结构。它解雇4个人，同时新招4个人，经济形势不好只是一个借口。所以，就算离开现在的公司，其他正在招人的公司还有很多。如果你不喜欢现在的工作，被解雇其实是一件好事，让你有机会去找一份让自己兴奋的新工作。但有两件事平时就要做好：1)预留一些现金，至少够应付三个月的支出。2)强化一些方便求职的技能。**与其担心宏观经济，不如关注自己。你对自己生活的影响，往往比宏观经济对你的影响大得多。**公司裁员肯定会对一个人产生影响，但是它决定不了你的未来，你自己才是最大的影响因素。如果公司确实要裁员，这件事的决定权就不在你了，你已经影响不了结局了。与其为自己决定不了的事情烦恼，不如多想想，怎么面对挑战，为未来的自己找到更好的发展。这样说吧，你影响不了裁员这件事，但是你可以影响自己的未来。世界最大对冲基金"桥水基金"创始人达里奥，说过一句话，可以用在这里："如果你忧心忡忡，那是不必要的；如果你毫不担心，那么你需要担心。" -- [Frank](https://news.ycombinator.com/item?id=32798377)
1. 我认为，人工智能不会取代人类。因为计算机只会计算，它们做不了任何不能表示为计算的事情。 -- [罗伯特 J. 马克斯](https://mindmatters.ai/2022/07/marks-forget-the-hype-thinking-machines-cant-replace-humans/)
1. 你的脑海中，必须始终记着十几个你最喜欢的问题，平时它们处于休眠状态。每次你听到或读到一个新发现时，就针对这十几个问题中的每一个进行测试，看看对解答问题是否有帮助，很多突破就是这样产生的。 -- [理查德·费曼](https://alumni.media.mit.edu/~cahn/life/gian-carlo-rota-10-lessons.html)

### 观点
###### [四十年编程感想(Hacker News)](https://codefol.io/posts/the-forty-year-programmer/)
1. 编程是s长期职业：你可能会从事20年甚至更长。你应该从长期角度看待编程。在长期中，技术来来去去，语言也来来去去，精通一种技术或语言，并不能保证你的长期职业发展。你的目标不必局限在学习什么语言或框架，只要吃透基础知识，你可以学会任何你想要的东西。
1. 多尝试不同的事情：编程生涯漫长，不要急于求成，只需要动手写代码就可以了，任何代码都没有关系，写完一个软件，再写下一个。写不同的软件，尝试不同的事情。你会发现，自己需要学习很多不同的东西。你按什么顺序学习它们并不是大问题。不要变得僵化，抱住某个领域不放。几乎任何学科都可以教给你一些东西。如果你太僵化，抗拒学习其他领域的知识，那你就输了。多学习一些困难的东西，容易发现自己的问题。你可以给自己定一个目标，比如"每周二做一件以前从没有做过的事情"。当然，你最终需要深入某个领域。李小龙说过："我不怕练过一万种拳法的人。但是一种拳练了一万遍的人，我怕他。"
1. 目标是变得更好：不管使用什么技术，你的目标都应该是动手做出成果，让自己变得更好。20年后，你跟别人说："我是一个拥有20年经验的程序员。"别人就会问你："这20年你做了什么？"你的职业生涯最终就是回答这个问题：你问自己，这20年我做了什么。理想的情况是，20年来，你真正擅长了某件事，而且这件事是社会需要的或者有利可图的，你以某种方式"让它变大"。这样你就会拥有一个成功的职业生涯。
1. 继续工作：尽管已经46岁，我仍然喜欢编写软件。虽然成为伟大程序员的概率已经为零了，但是在这个年龄，我依然可以完成一些工作。编程既不是短跑，也不是马拉松，而是日记。在日复一日的累积当中，完成你的事业。作为一名程序员的关键，就是"继续工作"，做出有价值的产品。最早的程序员出现在1957年。经过这么多年，软件依然是一个年轻的行业，这意味着，我们仍然在初级阶段，这个世界还会有无限的有趣工作可以让你变得更好。

### 有趣
###### [Master Foo and the Recruiter](http://www.catb.org/~esr/writings/unix-koans/recruiter.html)
Foo 大师遇到了一家大公司的面试官。 面试官说："面试时，我问很多 Unix 程序员，他们在新兴的编程语言方面有多少年经验时，他们都会皱眉或生气。这是为什么？" Foo 大师站了起来，开始在办公室里不断踱步。 面试官不解地问道："你在做什么？" "我正在学走路"，Foo 大师回答。 "你不是自己走进办公室的吗，"面试官惊呼道，"而且也没有摔倒，你明明已经知道如何走路了。" "是的，但是我是第一次来这层楼。" Foo 大师回答。 
听了这话，面试官恍然大悟。

### 荐书



![](/img/wc-tail.GIF)
